package com.mobius.software.telco.protocols.diameter.primitives.s6t;
/*
 * Mobius Software LTD
 * Copyright 2023, Mobius Software LTD and individual contributors
 * by the @authors tag.
 *
 * This program is free software: you can redistribute it and/or modify
 * under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation; either version 3 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

import java.util.Date;
import java.util.List;

import com.mobius.software.telco.protocols.diameter.annotations.DiameterAvpDefinition;
import com.mobius.software.telco.protocols.diameter.primitives.DiameterGroupedAvp;
import com.mobius.software.telco.protocols.diameter.primitives.KnownVendorIDs;

/**
*
* @author yulian oifa
*
*/

/*
 * 	8.4.2	Monitoring-Event-Configuration
	The Monitoring-Event-Configuration AVP is of type Grouped, and it contains the details of the monitoring event from the SCEF. At least SCEF-Reference-ID or one SCEF-Reference-ID-for-Deletion shall be present.
	AVP format:

	Monitoring-Event-Configuration ::=	<AVP header: 3122 10415>
			 [ SCEF-Reference-ID ]
			 [ SCEF-Reference-ID-Ext ]
			 { SCEF-ID }
			 { Monitoring-Type }
			*[ SCEF-Reference-ID-for-Deletion ]
			*[ SCEF-Reference-ID-for-Deletion-Ext ]
			 [ Maximum-Number-of-Reports ]
			 [ Monitoring-Duration ]
			 [ Charged-Party ]
			 [ Maximum-Detection-Time ]
			 [ UE-Reachability-Configuration ]
			 [ Location-Information-Configuration ]
			 [ Association-Type ]
			 [ DL-Buffering-Suggested-Packet-Count ]
			 [ PLMN-ID-Requested ]
			 [ MTC-Provider-Info ]
			 [ PDN-Connectivity-Status-Configuration ]
			 [ Exclude-Identifiers ]
			 [ Include-Identifiers ]
			*[AVP]

	At least one of the SCEF-Reference-ID or SCEF-Reference–ID-for-Deletion shall be present.
	The Maximum-Number-of-Reports AVP, if present, shall contain the maximum number of event reports to be generated by the HSS, MME, or SGSN until the monitoring event configuration is considered to expire.
	The Monitoring-Duration AVP, if present, shall contain the absolute time at which the monitoring event configuration is considered to expire.
	If both Maximum-Number-of-Reports and Monitoring-Duration AVPs are present, the monitoring event configuration shall be considered to expire as soon as one of the conditions is met.
	If both Maximum-Number-of-Reports and Monitoring-Duration AVPs are absent, the monitoring event configuration shall be considered as a one-time monitoring request (same behaviour as setting Maximum-Number-of-Reports to 1).
	Monitoring-Type shall only be taken into account in combination with SCEF-Reference-ID; Monitoring-Type AVP shall be ignored for deletion of an event (in combination with SCEF-Reference-ID-for-Deletion).
	The details of how to handle expiration of Monitoring events is described in 3GPP TS 23.682 [2].
	When the "Extended Reference IDs" feature is supported by the HSS and SCEF, the SCEF-Reference-ID-Ext and SCEF-Reference-ID-for-Deletion-Ext AVPs shall be used insted of SCEF-Reference-ID and SCEF-Reference-ID-for-Deletion respectively.
	When the "Dynamic-Group-Event-Monitoring" feature is supported by the HSS and SCEF, the Exclude-Identifiers AVP may be included to cancel the event monitoring for the listed UEs in a group for which there is a configured Monitoring Event, or the Include-Identifiers AVP may be included to create the event monitoring for the listed UEs in a group for which there is a configured Monitoring Event.
 */
@DiameterAvpDefinition(code = 3122L, vendorId = KnownVendorIDs.TGPP_ID, name = "Monitoring-Event-Configuration")
public interface MonitoringEventConfiguration extends DiameterGroupedAvp
{
	Long getSCEFReferenceID();
	
	void setSCEFReferenceID(Long value);
	
	Long getSCEFReferenceIDExt();
	
	void setSCEFReferenceIDExt(Long value);
	
	String getSCEFID();
	
	void setSCEFID(String value);	
	
	MonitoringTypeEnum getMonitoringType();
	
	void setMonitoringType(MonitoringTypeEnum value);
	
	List<Long> getSCEFReferenceIDForDeletion();
	
	void setSCEFReferenceIDForDeletion(List<Long> value);
	
	List<Long> getSCEFReferenceIDForDeletionExt();
	
	void setSCEFReferenceIDForDeletionExt(List<Long> value);
	
	Long getMaximumNumberOfReports();
	
	void setMaximumNumberOfReports(Long value);
	
	Date getMonitoringDuration();
	
	void setMonitoringDuration(Date value);
	
	String getChargedParty();
	
	void setChargedParty(String value);
	
	Long getMaximumDetectionTime();
	
	void setMaximumDetectionTime(Long value);
	
	UEReachabilityConfiguration getUEReachabilityConfiguration();
	
	void setUEReachabilityConfiguration(UEReachabilityConfiguration value);
	
	LocationInformationConfiguration getLocationInformationConfiguration();
	
	void setLocationInformationConfiguration(LocationInformationConfiguration value);
	
	AssociationTypeEnum getAssociationType();
	
	void setAssociationType(AssociationTypeEnum value);
	
	Integer getDLBufferingSuggestedPacketCount();
	
	void setDLBufferingSuggestedPacketCount(Integer value);
	
	PLMNIDRequestedEnum getPLMNIDRequested();
	
	void setPLMNIDRequested(PLMNIDRequestedEnum value);
	
	MTCProviderInfo getMTCProviderInfo();
	
	void setMTCProviderInfo(MTCProviderInfo value);	
	
	PDNConnectivityStatusConfiguration getPDNConnectivityStatusConfiguration();
	
	void setPDNConnectivityStatusConfiguration(PDNConnectivityStatusConfiguration value);	
	
	ExcludeIdentifiers getExcludeIdentifiers();
	
	void setExcludeIdentifiers(ExcludeIdentifiers value);	
	
	IncludeIdentifiers getIncludeIdentifiers();
	
	void setIncludeIdentifiers(IncludeIdentifiers value);
}